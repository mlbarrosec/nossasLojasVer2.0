swagger: '2.0'

schemes: 
  - http
  - https

host: localhost:3000
basePath: /NossasLojas/

info:
  version: 1.0.0
  title: Nossas Lojas
  description: API REST para ecomerse, utilizando Node.js e MYQL

securityDefinitions:
  BasicAuth:
    type: basic

security: 
  - BasicAuth: []

consumes: 
  - application/json
produces: 
  - application/json

tags:
  - name: Requisições
  
paths:
  '/stores/store/':
    post:
      tags:
        - Requisições
      summary: Cadastra uma loja
      description: Cadastra uma nova loja no banco de dados
      operationId: cadastraLoja
      parameters: 
        - in: body
          name: Cadastra
          schema:
            $ref: '#/definitions/Cadastra'
      responses:
        201:
          description: Loja Cadastrada com sucesso
          schema: 
           $ref: '#/definitions/Cadastra'
        400:
          description: Requisição inválida
        500:
          description: Erro do servidor
          
  '/stores/store/{id}':
    put:
      tags:
        - Requisições
      summary: Edita uma Loja
      description: Edita uma loja no banco de dados usando como referência seu ID
      operationId: editaLoja
      parameters: 
        - in: path
          name: id
          type: integer
          format: int64
          required: true
        - in: body
          name: Edita
          schema:
            $ref: '#/definitions/Edita'
      responses:
        204:
          description: Loja editada com sucesso
        400:
          description: Requisição inválida 
        500:
          description: Ero no servidor
    
    delete:
      tags:
        - Requisições
      summary: Exclui uma loja
      description: Exclui uma loja do banco de dados usando como referência seu ID
      operationId: deletaLoja
      parameters:
        - in: path
          name: id
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: Loja Excluida com sucesso.
        400:
          description: Requisição inválida 
        500:
          description: Ero no servidor
    
    get:
      tags:
        - Requisições
      summary: Busca uma loja
      description: Busca uma loja no banco usado como referencia seu id
      operationId: buscaLoja
      parameters: 
        - in: path
          name: id
          type: integer
          format: int64
          required: true
      responses:
        204:
          description: Loja buscada com sucesso
        400:
          description: Requisição inválida 
        500:
          description: Ero no servidor
      
  '/stores/lista/':
    get:
      tags:
        - Requisições
      summary: Lista as lojas
      description: Lista todas as lojas ou filtra por estado, estado ou ambos
      operationId: listaLojas
      parameters: 
        - in: body
          name: Lista
          schema:
            $ref: '#/definitions/Lista'
      responses:
        201:
          description: Loja(s) Encontrada com sucesso
          schema: 
           $ref: '#/definitions/ListaRes'
        400:
          description: Requisição inválida
        500:
          description: Erro do servidor
      
    
  
  
definitions:
  Cadastra:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 45
      name:
        type: string
        example: Loja Teste
      address:
        type: string
        example: Rua Def, 002
      phone:
        type: string  
        example: (11) 1111-1111
      cnpj:
        type: string
        example: 00.000.000/0000-01
      workingHour:
        type: string
        example: Diariamente das 14hs às 22hs
      city:
        type: string  
        example: Cidade ABC
      state:
        type: string  
        example: A

  Edita:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Loja Teste
      address:
        type: string
      phone:
        type: string
      cnpj:
        type: string
      workingHour:
        type: string
      city:
        type: string
      state:
        type: string  
        
  Lista:
    type: object
    properties:
      city:
        type: string
      state:
        type: string
        
  ListaRes:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Loja Teste
      address:
        type: string
      phone:
        type: string
      cnpj:
        type: string
      workingHour:
        type: string
      city:
        type: string
      state:
        type: string  
    
      
        
  
      
  
  
    
  
  